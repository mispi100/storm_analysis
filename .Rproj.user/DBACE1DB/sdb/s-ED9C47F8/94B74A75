{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Storm Data Analysis\"\nauthor: \"Michaela Spiegel\"\ndate: \"13 April 2018\"\noutput: pdf_document\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# Data Processing\n\n## Reading in Data\n\nFirst I download the storm data from the National & Atmospheric Administration's (NOAA) storm database.\n\n```{r download files, echo = TRUE, cache = TRUE}\ndata_url <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2\"\ndoc_url <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2Fpd01016005curr.pdf\"\nfaq_url <- \"https://d396qusza40orc.cloudfront.net/repdata%2Fpeer2_doc%2FNCDC%20Storm%20Events-FAQ%20Page.pdf\"\ndownload.file(data_url, \"stormdata.csv.bz2\")\ndownload.file(doc_url, \"doc.pdf\")\ndownload.file(faq_url, \"faq.pdf\")\nstorm_data <- read.csv(\"stormdata.csv.bz2\")\n#summary(storm_data)\n```\n\n\n\nThe dataframe is quite huge with `r ncol(storm_data)` columns and `r nrow(storm_data)` rows. \n\n## Cleaning up data\n\nSince I am interested in the to study which events are most harmful and have the greatest economic consequences, I first study what event types are in the data set.\n```{r count_evtype, echo = TRUE, cache = TRUE}\ns <- table(storm_data$EVTYPE)\nhead(s[order(-s)],12)\n```\n\nIf we just look at the twelve most commont event types, we can see that the notation\nin the database is not consistent.\nFor example \"TSTM WIND\", \"THUNDERSTORM WIND\", \"THUNDERSTORM WINDS\" can be\ngrouped together for sure as the same type of event.\nIt is not really clear what the differnce between \"FLASH FLOOD\" and \"FLOOD\" is.\n**In total there are `r nrow(s)` different event types.**\n\n\n```{r rare_evtype, echo = TRUE, cache = TRUE}\nevents_smaller_ten = 0\nnames_smaller_ten = \"\"\nfor (i in 1:nrow(s)){\n  if (s[[i]] %in% c(1:10)){\n    events_smaller_ten = events_smaller_ten + 1\n    #print(names(s[i]))\n    names_smaller_ten[events_smaller_ten] <- names(s[i])\n    }  \n}\n```\n\nSome values for event types appear only 1 to 10 times. \nThey actually make up `r events_smaller_ten` different event type values.\n\nExamples of these low fequency event type values are:\n\n```{r rare_evtype_name, echo = TRUE, cache = TRUE}\nhead(names_smaller_ten,12)\n```\n\n\nTo clean up the data first all types are converted to lower characters.\n```{r evtype to lower, echo = TRUE, cache = TRUE}\nstorm_data$event_type <- tolower(storm_data$EVTYPE)\ns_c1 <- table(storm_data$event_type)\n```\n\n**In total there are now  `r nrow(s_c1)` (before: `r nrow(s)`)  different event types.**\n\nTo group event types like \"THINDERSTORM WINDS\" and THUNDERSTORM WIND\", we can do some \nstemming, which will change the plural to singular.\n\n\n```{r evtype stemming, echo = TRUE, cache = TRUE}\nlibrary(SnowballC)\nstorm_data$event_type <- wordStem(storm_data$event_type, language = \"en\")\ns_c2 <- table(storm_data$event_type)\nhead(s_c2[order(-s_c2)],12)\n```\n\n**In total there are now  `r nrow(s_c2)` (before: `r nrow(s_c1)`, beginning: `r nrow(s)`)  different event types.**\n\n```{r correct errors, echo = TRUE, cache = TRUE}\nlibrary(corpus)\nstem_spellcorrect <- function(term) {\n    # if the term is spelled correctly, leave it as-is\n    if (hunspell::hunspell_check(term)) {\n        return(term)\n    }\n    suggestions <- hunspell::hunspell_suggest(term)[[1]]\n    # if hunspell found a suggestion, use the first one\n    if (length(suggestions) > 0) {\n        suggestions[[1]]\n    } else {\n        # otherwise, use the original term\n        term\n    }\n}\nstorm_data$event_type <- text_tokens(storm_data$event_type, stemmer = stem_spellcorrect)\n\n```\n\n```{r}\n\" \".join(storm_data$event_type[1:400])\n#s_c3 <- storm_data$event_type\n#head(s_c3[order(s_c3)],12)\n```\n\n\n**In total there are now  `r nrow(s_c2)` (before: `r nrow(s_c2)`, beginning: `r nrow(s)`)  different event types.**\n\n\nThe next thing which we saw before, was the shortcut TSTM for thunderstorm,\nso we can go and change this.\n\n```{r}\n#library(stringr)\n#storm_data$event_type <- str_replace_all(storm_data$event_type, \"tstm\", \"thunderstorm\")\n#s_c4 <- table(storm_data$event_type)\n#head(s_c4[order(-s_c4)],12)\n#s_c4[1]\n```\n**In total there are now  `r nrow(s_c1)` (before: `r nrow(s_c2)`, beginning: `r nrow(s)`)  different event types.**\n\n\n\n```{r inspect data, echo = TRUE}\nhead(storm_data, 3)\n```\n\n\n\n# Data Results\n\n\n",
    "created" : 1523605944191.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1647541223",
    "id" : "94B74A75",
    "lastKnownWriteTime" : 1523904184,
    "last_content_update" : 1523904184320,
    "path" : "~/DataScience_Course/storm_analysis/storm.Rmd",
    "project_path" : "storm.Rmd",
    "properties" : {
        "last_setup_crc32" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}